<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">

    <changeSet id="create_table_roles" author="alexey">
        <sql>
            create table roles
            (
            id   bigserial    primary key,
            name varchar(20)  not null
            );
        </sql>
        <rollback>
            drop table roles;
        </rollback>
    </changeSet>

    <changeSet id="create_table_categories" author="alexey">
        <sql>
            create table categories
            (
            id bigserial primary key,
            name varchar not null
            );
        </sql>
        <rollback>
            drop table categories;
        </rollback>
    </changeSet>

    <changeSet id="create_table_users" author="alexey">
        <sql>
            create table users
            (
            id bigserial primary key,
            login varchar not null,
            password varchar not null,
            firstname varchar not null,
            lastname varchar not null,
            phone_number varchar(11) not null,
            rating double precision not null,
            role_id integer not null,
            foreign key (role_id) references roles (id) on delete cascade,

            constraint valid_number
            check (rating &lt;= 5)
            );
        </sql>
        <rollback>
            drop table users;
        </rollback>
    </changeSet>

    <changeSet id="create_table_users_chat" author="alexey">
        <sql>
            create table users_chat
            (
            user_id bigserial unique not null,
            name varchar not null
            );
        </sql>
        <rollback>
            drop table users_chat;
        </rollback>
    </changeSet>

    <changeSet id="create_table_chats" author="alexey">
        <sql>
            create table chats
            (
            id bigserial primary key,
            seller_id bigint unique not null,
            buyer_id bigint unique not null,
            foreign key (seller_id) references users_chat (user_id) on delete cascade,
            foreign key (buyer_id) references users_chat (user_id) on delete cascade
            );
        </sql>
        <rollback>
            drop table chats;
        </rollback>
    </changeSet>

    <changeSet id="create_table_messages" author="alexey">
        <sql>
            create type role as enum ('seller', 'buyer');

            create table messages
            (
            id bigserial primary key,
            current_user_role role not null,
            message_text varchar not null,
            time_of_message timestamp with time zone not null,
            chat_id bigint not null,
            foreign key (chat_id) references chats (id) on delete cascade
            );
        </sql>
        <rollback>
            drop table messages;
        </rollback>
    </changeSet>

    <changeSet id="create_table_posts" author="alexey">
        <sql>
            create table posts
            (
            id bigserial primary key,
            title varchar not null,
            price double precision,
            is_active boolean not null,
            picture varchar not null,
            description varchar not null,
            post_time timestamp with time zone not null,
            seller_id bigint not null,
            category_id bigint not null,
            priority boolean not null,
            foreign key (seller_id) references users (id) on delete cascade,
            foreign key (category_id) references categories (id) on delete cascade
            );

            create extension pg_trgm;

            create index posts_trgm_idx on posts
            using gin (title gin_trgm_ops);
        </sql>
        <rollback>
            drop table posts;
        </rollback>
    </changeSet>

    <changeSet id="create_table_comments" author="alexey">
        <sql>
            create table comments
            (
            id bigserial primary key,
            post_id bigint not null,
            user_id bigint not null,
            comment_time timestamp with time zone not null,
            comment varchar not null,
            foreign key (post_id) references posts (id) on delete cascade,
            foreign key (user_id) references users (id) on delete cascade
            );
        </sql>
        <rollback>
            drop table comments;
        </rollback>
    </changeSet>

    <changeSet id="create_table_ratings" author="alexey">
        <sql>
            create table ratings
            (
            id bigserial primary key,
            user_id bigint not null,
            rate double precision not null,
            foreign key (user_id) references users (id) on delete cascade,

            constraint valid_number
            check (id &lt;= 5)
            );
        </sql>
        <rollback>
            drop table ratings;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_roles" author="alexey">
        <sql>
            insert into roles(name) values ('ROLE_ADMIN');
            insert into roles(name) values ('ROLE_USER');
        </sql>
        <rollback>
            delete from posts where id &lt; 3;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_categories" author="alexey">
        <sql>
            insert into categories values(1, 'furniture');
            insert into categories values(2, 'clothes');
        </sql>
        <rollback>
            delete from posts where id &lt; 3;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_users" author="alexey">
        <sql>
            insert into users values(1, 'alex', 'password1', 'Alex', 'Bych', '88888888888', 5, 1);
            insert into users values(2, 'pasha', 'password2', 'Pavel', 'F', '99999999999', 3, 2);
            insert into users values(3, 'masha', 'password3', 'Maria', 'G', '11111111111', 2, 2);
        </sql>
        <rollback>
            delete from posts where id &lt; 4;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_users_chat" author="alexey">
        <sql>
            insert into users_chat values(2, 'Pavel');
            insert into users_chat values(3, 'Maria');
        </sql>
        <rollback>
            delete from posts where id &lt; 3;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_chats" author="alexey">
        <sql>
            insert into chats values(1, 3, 2);
        </sql>
        <rollback>
            delete from posts where id = 1;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_messages" author="alexey">
        <sql>
            insert into messages values(1, 'buyer', 'prove original', '2021-11-11', 1);
            insert into messages values(2, 'seller', 'no', '2021-11-11', 1);
        </sql>
        <rollback>
            delete from posts where id &lt; 3;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_posts" author="alexey">
        <sql>
            insert into posts values(1, 'sofa', 2300, true, 'sofa.png', 'super sofa, very soft', '2020-01-01', 2, 1, false);
            insert into posts values(2, 'pants nike', 3000, true, 'pants_nike.png', 'new pants, XXL', '2020-07-11', 2, 2, true);
            insert into posts values(3, 'jacket gucci', 40500, true, 'lol.png', 'original', '2021-10-09', 3, 2, false);
        </sql>
        <rollback>
            delete from posts where id &lt; 4;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_comments" author="alexey">
        <sql>
            insert into comments values(1, 1, 1, '2020-01-02', 'bad sofa');
            insert into comments values(2, 1, 3, '2021-11-11', 'its not original lol');
            insert into comments values(3, 2, 3, '2021-12-12', 'its not good seller');
        </sql>
        <rollback>
            delete from comments where id &lt; 4;
        </rollback>
    </changeSet>

    <changeSet id="insert_values_into_ratings" author="alexey">
        <sql>
            insert into ratings values(1, 3, 1);
            insert into ratings values(2, 3, 3);
        </sql>
        <rollback>
            delete from posts where id &lt; 3;
        </rollback>
    </changeSet>
</databaseChangeLog>